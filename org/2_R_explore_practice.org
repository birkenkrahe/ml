#+title: R review: data structures
#+author: [yourname]
#+startup: overview hideblocks indent
#+property: header-args:R :session *R* :exports both :results output
* README

This file covers main data structures in R:
- Vectors, or ordered n-tuples
- Factor vectors, or vectors for ordered or nominal categories
- Lists, or collections of any other R data structure
- Data frames, or a table of features (cols) and observations (rows)

Most of this material can be found in Lantz, Machine Learning with R
(3e, 2019), Packt. Solutions can be found in GitHub as PDF files.

* TODO Identify and pledge yourself

1) In Emacs, replace the placeholder ~[yourname]~ at the top of this
   file by your own name and write ~(pledged)~ next to it
2) Go with the cursor on the headline and hange the ~TODO~ label to ~DONE~
   by entering ~S-<right>~ ("Shift + right-arrow").

* TODO Vectors

1) Construct a set of vectors containing data on three medical
   patients:
   - Create a ~character~ vector named ~subject_name~ to store the three
     patient names: John Doe, Jane Doe, and Steve Graves
   - Create a ~numeric~ vector named ~temperature~ to store each patient's
     body temperature in degrees Fahrenheit: 98.1, 98.6, 101.4
   - Create a ~logical~ vector named ~flu_status~ to store each patient's
     diagnosis: ~TRUE~ if he or she has influenza, ~FALSE~ otherwise: John
     and Jane do not have the flu, but Steve does have the flu.
   #+begin_src R :results silent

   #+end_src

2) Display the content of the vectors.
   #+begin_src R

   #+end_src

3) Display the type of vector for each of the three vectors.
   #+begin_src R

   #+end_src

4) Extract the ~temperature~ (~98.6~) of the 2nd patient, John Doe, using
   the index operator.
   #+begin_src R

   #+end_src

5) Extract the ~temperature~ values of the other two patients by
   excluding John Doe's temperature from the printout.
   #+begin_src R

   #+end_src

* TODO Factors

1) Create a ~factor~ vector named ~gender~ for the three patients, with
   the values "MALE" or "FEMALE".
   #+begin_src R

   #+end_src

2) Create a ~factor~ for blood type called ~blood~. John, Jane and Steve
   have blood type ~"0"~, ~"AB"~ and ~"A"~, respectively. Since there are
   four blood types, add another ~level~, ~"B"~ inside the definition of
   ~blood~.
   #+begin_src R

   #+end_src

3) Create an /ordered/ ~factor~ for severity of patient symptoms called
   ~symptoms~, with the values ~"SEVERE"~, ~"MILD"~ and ~"MODERATE"~.
   #+begin_src R

   #+end_src

4) Test whether each patient's symptoms are more severe than
   moderate.
   #+begin_src R

   #+end_src

* TODO Lists

1) Create a ~list~ named ~subject_1~ with /named/ components for all of the
   first patient's data: ~name~, ~temperature~, ~flu_status~, ~gender~,
   ~blood~, and ~symptoms~. Print the list.
   #+begin_src R

   #+end_src

2) Extract the ~temperature~ of the patient from the list ~subject_1~.
   #+begin_src R

   #+end_src

3) Extract the temperature and the flu status of the patient from the
   list ~subject_1~ with one command.
   #+begin_src R

   #+end_src

* TODO Data frames

1) Combine the features ~subject_name~, ~temperature~, ~flu_status~, ~gender~,
   ~blood~ and ~symptoms~ into a data frame.
   #+begin_src R

   #+end_src

2) Extract the ~subject_name~ vector from ~pt_data~, with the names of the
   three patients.
   #+begin_src R

   #+end_src

3) Extract ~temperature~ and ~flu_status~ of all patients from ~pt_data~
   with one command.
   #+begin_src R

   #+end_src

4) Extract the ~temperature~ of ~John Doe~ from the data frame. John's
   data are in row 1 and column 2 of ~pt_data~.
   #+begin_src R

   #+end_src
   
5) What if you don't know the row and column number but only that ~John
   Doe~ is a name in the feature vector ~subject_name~, and that his
   temperature is in the feature vector ~temperature~?
   #+begin_src R

   #+end_src

6) Extract the data from the first and third row, and the second and
   fourth column of the data frame ~pt_data~.
   #+begin_src R

   #+end_src

7) Copy all columns of ~pt_data~ to another data frame ~df~ except the
   ~subject_name~ column and print ~df~.
   #+begin_src R

   #+end_src

8) Name the patient records according to the patient's names, John
   Doe, Jane Doe and Steve Graves, then print ~df~.
   #+begin_src R

   #+end_src

9) Extract the ~temperature~ of ~John Doe~ from the data frame ~df~ using
   the row and column names.
   #+begin_src R

   #+end_src

10) Extract ~gender~ and ~blood~ type of John Doe and Steve Graves from
    the data frame ~df~.
    #+begin_src R

    #+end_src

11) Extract ~gender~ and ~blood~ type of John Doe and Steve Graves from
    the data frame ~pt_data~ by *removing* all data that you do not want.
    #+begin_src R

    #+end_src

12) Add a new column ~temp_c~ to ~pt_data~ that contains the ~temperature~
    in degrees Celsius: the conversion formula is: 1 C = (1 F - 32) *
    (5/9).
    #+begin_src R :results silent

    #+end_src

13) Print the temperature of all patients in Fahrenheit and Celsius.
    #+begin_src R

    #+end_src

14) Change the display of digits so that both temperature columns show
    only one digit after the decimal point.
    #+begin_src R

    #+end_src

* TODO Wow! Congratulations!

Well done! You've reached the end of this in-class practice file.

If you've completed all steps, you can now upload the Org-mode file to
Canvas (see ~Assignments > In-class practice~.

